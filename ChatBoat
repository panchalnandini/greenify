<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <!-- CHATBOT HTML -->
    <div id="chatbot-container" class="chatbot-container">
      <div class="chatbot-header">
        <h3>üåç Eco-Chat AI</h3>
        <button id="close-chatbot" class="close-btn">‚úï</button>
      </div>

      <div id="messages-container" class="messages-container">
        <div class="message bot-message">
          <p>
            üåç Hi! I'm your real AI assistant powered by Groq! Ask me anything
            about climate, recycling, energy, sustainability, or any topic! üß†
          </p>
        </div>
      </div>

      <div class="chatbot-input">
        <input
          type="text"
          id="user-input"
          placeholder="Ask anything..."
          class="input-field"
        />
        <button id="send-btn" class="send-btn">Send</button>
      </div>
    </div>

    <!-- FLOATING BUTTON -->
    <button id="chatbot-toggle" class="chatbot-toggle">üåø</button>

    <!-- STYLE -->
    <style>
      .chatbot-toggle {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        border: none;
        color: white;
        font-size: 28px;
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        z-index: 999;
        transition: all 0.3s ease;
      }

      .chatbot-toggle:hover {
        transform: scale(1.1);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
      }

      .chatbot-container {
        position: fixed;
        bottom: 90px;
        right: 20px;
        width: 400px;
        height: 500px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 5px 40px rgba(0, 0, 0, 0.16);
        display: flex;
        flex-direction: column;
        z-index: 1000;
        display: none;
      }

      .chatbot-container.active {
        display: flex;
      }

      .chatbot-header {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        padding: 15px;
        border-radius: 12px 12px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .chatbot-header h3 {
        margin: 0;
        font-size: 16px;
      }

      .close-btn {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
      }

      .messages-container {
        flex: 1;
        overflow-y: auto;
        padding: 15px;
        background: linear-gradient(to bottom, #f0fdf4 0%, #ffffff 100%);
      }

      .message {
        margin-bottom: 12px;
        display: flex;
        animation: slideIn 0.3s ease;
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .bot-message {
        justify-content: flex-start;
      }

      .user-message {
        justify-content: flex-end;
      }

      .message p {
        max-width: 80%;
        padding: 10px 14px;
        border-radius: 8px;
        margin: 0;
        font-size: 14px;
        line-height: 1.4;
        word-wrap: break-word;
      }

      .bot-message p {
        background: #e5e7eb;
        color: #1f2937;
        border-radius: 8px 8px 8px 0;
      }

      .user-message p {
        background: #10b981;
        color: white;
        border-radius: 8px 8px 0 8px;
      }

      .loading {
        display: flex;
        gap: 4px;
        align-items: center;
      }

      .dot {
        width: 8px;
        height: 8px;
        background: #10b981;
        border-radius: 50%;
        animation: bounce 1.4s infinite;
      }

      .dot:nth-child(2) {
        animation-delay: 0.2s;
      }

      .dot:nth-child(3) {
        animation-delay: 0.4s;
      }

      @keyframes bounce {
        0%,
        80%,
        100% {
          opacity: 0.3;
        }
        40% {
          opacity: 1;
        }
      }

      .chatbot-input {
        display: flex;
        gap: 8px;
        padding: 12px;
        border-top: 1px solid #e5e7eb;
      }

      .input-field {
        flex: 1;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        padding: 10px 12px;
        font-size: 14px;
        outline: none;
        transition: border-color 0.2s;
      }

      .input-field:focus {
        border-color: #10b981;
      }

      .send-btn {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        border: none;
        border-radius: 6px;
        padding: 10px 20px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.2s;
      }

      .send-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
      }

      .send-btn:active {
        transform: translateY(0);
      }

      @media (max-width: 600px) {
        .chatbot-container {
          width: 100%;
          height: 70vh;
          bottom: 0;
          right: 0;
          border-radius: 12px 12px 0 0;
        }
      }
    </style>

    <!-- JAVASCRIPT - GROQ API (100% FREE) -->
    <script>
      // Groq API - Completely FREE with amazing speed
      // Your API key is already added below
      const GROQ_API_KEY = "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";
      const GROQ_API_URL = "https://api.groq.com/openai/v1/chat/completions";

      const DOM = {
        toggle: document.getElementById("chatbot-toggle"),
        container: document.getElementById("chatbot-container"),
        closeBtn: document.getElementById("close-chatbot"),
        messagesContainer: document.getElementById("messages-container"),
        userInput: document.getElementById("user-input"),
        sendBtn: document.getElementById("send-btn"),
      };

      let conversationHistory = [];

      DOM.toggle.addEventListener("click", () => {
        DOM.container.classList.toggle("active");
        DOM.userInput.focus();
      });

      DOM.closeBtn.addEventListener("click", () => {
        DOM.container.classList.remove("active");
      });

      DOM.sendBtn.addEventListener("click", sendMessage);
      DOM.userInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter") sendMessage();
      });

      async function sendMessage() {
        const message = DOM.userInput.value.trim();
        if (!message) return;

        addMessageToUI(message, "user");
        DOM.userInput.value = "";
        showLoading();

        try {
          const response = await fetch(GROQ_API_URL, {
            method: "POST",
            headers: {
              Authorization: `Bearer ${GROQ_API_KEY}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              model: "llama-3.3-70b-versatile",
              messages: [
                {
                  role: "system",
                  content:
                    "You are an expert environmental scientist and sustainability consultant. Answer questions about climate, recycling, renewable energy, water conservation, wildlife, sustainable living, and environmental topics. Be helpful, accurate, and conversational.",
                },
                ...conversationHistory,
                { role: "user", content: message },
              ],
              temperature: 0.7,
              max_tokens: 1000,
            }),
          });

          if (!response.ok) {
            const error = await response.json();
            throw new Error(error.error?.message || `HTTP ${response.status}`);
          }

          const data = await response.json();
          const botResponse = data.choices[0].message.content;

          removeLoading();
          addMessageToUI(botResponse, "bot");
          conversationHistory.push({ role: "user", content: message });
          conversationHistory.push({ role: "assistant", content: botResponse });
        } catch (error) {
          removeLoading();
          addMessageToUI("‚ö†Ô∏è Error: " + error.message, "bot");
        }
      }

      function addMessageToUI(message, sender) {
        const messageDiv = document.createElement("div");
        messageDiv.className = `message ${sender}-message`;

        const p = document.createElement("p");
        p.textContent = message;

        messageDiv.appendChild(p);
        DOM.messagesContainer.appendChild(messageDiv);
        DOM.messagesContainer.scrollTop = DOM.messagesContainer.scrollHeight;
      }

      function showLoading() {
        const messageDiv = document.createElement("div");
        messageDiv.className = "message bot-message";
        messageDiv.id = "loading-message";

        const loading = document.createElement("div");
        loading.className = "loading";
        loading.innerHTML =
          '<div class="dot"></div><div class="dot"></div><div class="dot"></div>';

        messageDiv.appendChild(loading);
        DOM.messagesContainer.appendChild(messageDiv);
        DOM.messagesContainer.scrollTop = DOM.messagesContainer.scrollHeight;
      }

      function removeLoading() {
        const loadingMsg = document.getElementById("loading-message");
        if (loadingMsg) loadingMsg.remove();
      }
    </script>
  </body>
</html>
